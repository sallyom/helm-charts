global:
  imagePullSecrets: []

namespace:
  create: false
  name: tsa-system

server:
  replicaCount: 1
  name: server
  svcPort: 80
  portHTTP: 5555
  secretMount: "/var/run/tsa-secrets"
  podAnnotations: {}
  logging:
    production: false
  image:
    registry: ghcr.io
    repository: sigstore/timestamp-server
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # crane digest ghcr.io/sigstore/timestamp-server:v1.1.1
    # -- v1.1.1
    version: sha256:b0be2fb18150bcbfe15ff82d95bd9373a5ac7e6d8c7663299940a78e43fe69aa
  secret:
    name: ""
    # Valid values: tink, kms, file
    signer: file
    # PEM encoded cert chain here. Order from active intermediate first to root last
    cert_chain: ""
    signing_secret: ""
    signing_secret_password: ""
    tink_enc_keyset: ""
    tink_key_resource: ""
    tink_hcvault_token: ""
    kms_key_resource: ""
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65533
  annotations: {}
  nodeSelector: {}
  tolerations: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []
  service:
    type: ClusterIP
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 5555
      - name: metrics
        port: 2112
        protocol: TCP
        targetPort: 2112
  # Note: Ingress is deprecated. Use ingresses
  ingress: {}
  ingresses: []
    # enabled: false
    # className: nginx
    # hosts:
    #   - path: /
    # annotations: {}
    # tls: []

createsecret:
  enabled: true
  name: createsecret
  image:
    registry: ghcr.io
    repository: sigstore/scaffolding/createcertchain
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    # v0.6.5
    version: "sha256:50adb488a468fc0215e0b8e558e16fbab4026245d9a48fc0ee7275403f307b72"
  ttlSecondsAfterFinished: 3600
  serviceAccount:
    create: true
    name: ""
    annotations: {}
    mountToken: true
  containerSecurityContext:
    enabled: false
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 65533
  annotations: {}
  nodeSelector: {}
  tolerations: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumes: []
  extraVolumeMounts: []


# Force namespace of namespaced resources
forceNamespace: ""
